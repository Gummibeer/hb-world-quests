<HBProfile xsi:noNamespaceSchemaLocation="../Schemas/EchoSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>45792-[N]-[QUEST]-Wq-Occultist Onslaught-Zinner.xml</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>false</SellWhite>
	<SellGreen>false</SellGreen>
	<SellBlue>false</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	

	<QuestOrder>
	<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
			

    public class WorldQuestData
    {
        public int ID;
        public string Name;
        public DateTime ExpireTime;
    }


    public static class WorldQuestInfo
    {
        static List<WorldQuestData> _cache = new List<WorldQuestData>();
        static internal bool _dirty = true;
        static internal bool _setup = false;

        static WorldQuestInfo()
        {
            Setup();
        }

        public static void Setup()
        {
            if (_setup)
                return;

            Lua.Events.AttachEvent("WORLD_MAP_UPDATE", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("SUPER_TRACKED_QUEST_CHANGED", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("WORLD_QUEST_COMPLETED_BY_SPELL", WorldQuestMarkDirty);

            UpdateWorldQuests();
            _setup = true;
        }

        public static void WorldQuestMarkDirty(object sender, LuaEventArgs args)
        {
            _dirty = true;
        }

        public static bool HasWorldQuest(int questid)
        {
            UpdateWorldQuests();

            var quest = _cache.Where(q => q.ID == questid).FirstOrDefault();

            if (quest == null || quest.ExpireTime <= DateTime.UtcNow)
                return false;
            return true;
        }

        public static void UpdateWorldQuests()
        {
            if (!_dirty)
                return;
            _cache = new List<WorldQuestData>();
            
            var player = StyxWoW.Me;
            int BrokenIslesMapArea = 1007;

            var ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetNumZones({0});", BrokenIslesMapArea));
            
            var NumZones = int.Parse(ret[0]);

            for (int i = 1; i <= NumZones; ++i)
            {
                ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetZoneInfo({0}, {1});", BrokenIslesMapArea, i));

                var ZoneID = int.Parse(ret[0]);
                var ZoneName = ret[1];
                var ZoneDepth = int.Parse(ret[2]);

                if (ZoneDepth > 1) //Do not look at subzones
                {
                    Logging.WriteDiagnostic(string.Format("Ignoring {0} ({1}) as ZoneDepth > 1 ({2})", ZoneID, ZoneName, ZoneDepth));
                    continue;
                }

                string ToRun = string.Format(@"     local questids = {{}};

                    			                    local taskInfo = C_TaskQuest.GetQuestsForPlayerByMapID({0}, {1});

                                                    if taskInfo then
				                                                    for i, info in ipairs(taskInfo) do
					                                                    if HaveQuestData(info.questId) then
						                                                    if QuestUtils_IsQuestWorldQuest(info.questId) then
                                                                                    table.insert(questids, info.questId);
							                                                    end
						                                                    end
					                                                    end
				                                                    end
                                                   return unpack(questids);
                                                ", ZoneID, BrokenIslesMapArea);

                ret = Lua.GetReturnValues(ToRun);

                foreach (var q in ret)
                {
                    int questid = int.Parse(q);

                    //TimeLeft is in minutes
                    var TimeLeft = Lua.GetReturnVal<int>(string.Format("return C_TaskQuest.GetQuestTimeLeftMinutes({0});", questid), 0);
                    var QuestInfo = Lua.GetReturnValues(string.Format("return C_TaskQuest.GetQuestInfoByQuestID({0});", questid));

                    Logging.WriteDiagnostic("WorldQuest {0} ({2}) active ({1}m left)", QuestInfo[0], TimeLeft, questid);

                    var data = new WorldQuestData();
                    data.ID = questid;
                    data.Name = QuestInfo[0];
                    data.ExpireTime = DateTime.UtcNow.AddMinutes(TimeLeft);
                    _cache.Add(data);
                }
            }

            _dirty = false;
        }

        public static bool IsWorldQuest(int questid)
        {
            string lua = string.Format("tagID, tagName, worldQuestType, rarity, isElite, tradeskillLineIndex = GetQuestTagInfo({0});", questid);

            var ret = Lua.GetReturnValues(lua);

            if (ret[3] == null)
                return false;
            return true;
        }
    }


				]]>
			</CustomBehavior>
	
		
		<While Condition="WorldQuestInfo.HasWorldQuest(45792)" >
				<!-- Get in range of quest to activate -->
				<!-- <RunTo X="4548.213" Y="4636.258" Z="663.6569" /> -->
				<RunTo X="-1367.282" Y="1681.45" Z="6.678888" />
				<PickUp Nav="Fly" QuestName="Occultist Onslaught" QuestId="45792" GiverName="" GiverId="0" />

				<Objective QuestName="Occultist Onslaught" QuestId="45792" Type="KillMob" MobId="115874" KillCount="10" />

				<Objective QuestName="Occultist Onslaught" QuestId="45792" Type="UseObject" ObjectId="268626" UseCount="5" />

				<TurnIn Nav="Fly" QuestName="Occultist Onslaught" QuestId="45792" TurnInName="" TurnInId="0" />






</While>
		<While Condition="WorldQuestInfo.HasWorldQuest(46265)" >	
				<RunTo X="-1367.282" Y="1681.45" Z="6.678888" /> 		
			<CustomBehavior File="KillUntilComplete" MobIds="115874" PreInteractMountStrategy="Dismount" TerminateWhen="IsObjectiveComplete(1, 45792)" >
				<HuntingGrounds>
				<Hotspot X="-1367.282" Y="1681.45" Z="6.678888" />
				<Hotspot X="-1262.553" Y="1721.765" Z="8.193886" />
				<Hotspot X="-1253.983" Y="1719.757" Z="8.199386" />
				<Hotspot X="-1282.445" Y="1778.367" Z="9.069657" />
				<Hotspot X="-1243.5" Y="1775.465" Z="8.648039" />
				<Hotspot X="-1090.081" Y="1854.799" Z="51.30312" />
				<Hotspot X="-1061.077" Y="1855" Z="50.36922" />
				<Hotspot X="-1057.853" Y="1891.41" Z="47.09823" />
				<Hotspot X="-1034.56" Y="1925.829" Z="46.5295" />
				<Hotspot X="-987.5287" Y="1919.457" Z="48.47034" />
				<Hotspot X="-986.7729" Y="1874.169" Z="47.54416" />
				</HuntingGrounds>
			</CustomBehavior>
			<CustomBehavior File="InteractWith" MobIds="268626" PreInteractMountStrategy="Dismount" TerminateWhen="IsObjectiveComplete(2, 45792)" >
				<HuntingGrounds>
				<Hotspot X="-1367.282" Y="1681.45" Z="6.678888" />
				<Hotspot X="-1262.553" Y="1721.765" Z="8.193886" />
				<Hotspot X="-1253.983" Y="1719.757" Z="8.199386" />
				<Hotspot X="-1282.445" Y="1778.367" Z="9.069657" />
				<Hotspot X="-1243.5" Y="1775.465" Z="8.648039" />
				<Hotspot X="-1090.081" Y="1854.799" Z="51.30312" />
				<Hotspot X="-1061.077" Y="1855" Z="50.36922" />
				<Hotspot X="-1057.853" Y="1891.41" Z="47.09823" />
				<Hotspot X="-1034.56" Y="1925.829" Z="46.5295" />
				<Hotspot X="-987.5287" Y="1919.457" Z="48.47034" />
				<Hotspot X="-986.7729" Y="1874.169" Z="47.54416" />
				</HuntingGrounds>
			</CustomBehavior>
	<CustomBehavior File="Misc\RunLua" WaitTime="1500" Lua="WorldMapFrame:Show()" />
	<CustomBehavior File="Misc\RunLua" Lua="WorldMapFrame:Hide()" />
		</While>

<If Condition="HasItem(141605) &amp;&amp; Me.BagItems.FirstOrDefault(h =&gt; h.Entry == 141605).CooldownTimeLeft.TotalMilliseconds == 0" >
    <CustomBehavior File="UseItem" ItemId="141605" WaitTime="2000" />
</If>
	
<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;[Auto-Loader]: Finished World Quest 45792-[N]-[QUEST]-Wq-Occultist Onslaught-Zinner.xml, loading auto-loader!&quot;);" />
<CustomBehavior File="LoadProfile" ProfileName="../autoloader" RememberProfile="true" />
</QuestOrder>
</HBProfile>