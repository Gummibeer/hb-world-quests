<HBProfile xsi:noNamespaceSchemaLocation="../Schemas/EchoSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>[41896] Operation Murloc Freedom - Win</Name>
	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>
	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>
	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>
	<TargetElites>false</TargetElites>
	<QuestOrder>
		<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
			public class WorldQuestData
			{
			public int ID;
			public string Name;
			public DateTime ExpireTime;
			}
			public static class WorldQuestInfo
			{
			static List<WorldQuestData> _cache = new List<WorldQuestData>();
				static internal bool _dirty = true;
				static internal bool _setup = false;
				static WorldQuestInfo()
				{
				Setup();
				}
				public static void Setup()
				{
				if (_setup)
				return;
				Lua.Events.AttachEvent("WORLD_MAP_UPDATE", WorldQuestMarkDirty);
				Lua.Events.AttachEvent("SUPER_TRACKED_QUEST_CHANGED", WorldQuestMarkDirty);
				Lua.Events.AttachEvent("WORLD_QUEST_COMPLETED_BY_SPELL", WorldQuestMarkDirty);
				UpdateWorldQuests();
				_setup = true;
				}
				public static void WorldQuestMarkDirty(object sender, LuaEventArgs args)
				{
				_dirty = true;
				}
				public static bool HasWorldQuest(int questid)
				{
				UpdateWorldQuests();
				var quest = _cache.Where(q => q.ID == questid).FirstOrDefault();
				if (quest == null || quest.ExpireTime <= DateTime.UtcNow)
					return false;
					return true;
					}
					public static void UpdateWorldQuests()
					{
					if (!_dirty)
					return;
					_cache = new List<WorldQuestData>();
						var player = StyxWoW.Me;
						int BrokenIslesMapArea = 1007;
						var ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetNumZones({0});", BrokenIslesMapArea));
						var NumZones = int.Parse(ret[0]);
						for (int i = 1; i <= NumZones; ++i)
							{
							ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetZoneInfo({0}, {1});", BrokenIslesMapArea, i));
							var ZoneID = int.Parse(ret[0]);
							var ZoneName = ret[1];
							var ZoneDepth = int.Parse(ret[2]);
							if (ZoneDepth > 1) //Do not look at subzones
							{
							Logging.WriteDiagnostic(string.Format("Ignoring {0} ({1}) as ZoneDepth > 1 ({2})", ZoneID, ZoneName, ZoneDepth));
							continue;
							}
							string ToRun = string.Format(@"     local questids = {{}};
							local taskInfo = C_TaskQuest.GetQuestsForPlayerByMapID({0}, {1});
							if taskInfo then
							for i, info in ipairs(taskInfo) do
							if HaveQuestData(info.questId) then
							if QuestMapFrame_IsQuestWorldQuest(info.questId) then
							table.insert(questids, info.questId);
							end
							end
							end
							end
							return unpack(questids);
							", ZoneID, BrokenIslesMapArea);
							ret = Lua.GetReturnValues(ToRun);
							foreach (var q in ret)
							{
							int questid = int.Parse(q);
							//TimeLeft is in minutes
							var TimeLeft = Lua.GetReturnVal<int>(string.Format("return C_TaskQuest.GetQuestTimeLeftMinutes({0});", questid), 0);
								var QuestInfo = Lua.GetReturnValues(string.Format("return C_TaskQuest.GetQuestInfoByQuestID({0});", questid));
								Logging.WriteDiagnostic("WorldQuest {0} ({2}) active ({1}m left)", QuestInfo[0], TimeLeft, questid);
								var data = new WorldQuestData();
								data.ID = questid;
								data.Name = QuestInfo[0];
								data.ExpireTime = DateTime.UtcNow.AddMinutes(TimeLeft);
								_cache.Add(data);
								}
								}
								_dirty = false;
								}
								public static bool IsWorldQuest(int questid)
								{
								string lua = string.Format("tagID, tagName, worldQuestType, rarity, isElite, tradeskillLineIndex = GetQuestTagInfo({0});", questid);
								var ret = Lua.GetReturnValues(lua);
								if (ret[3] == null)
								return false;
								return true;
								}
								}
								]]>
							</CustomBehavior>


<!--
<PickUp Nav="Fly" QuestName="Operation Murloc Freedom" QuestId="41896" GiverName="" GiverId="" />
<Objective QuestName="Operation Murloc Freedom" QuestId="41896" Type="KillMob" Nav="Fly" MobId="105365" KillCount="50" />
<Objective QuestName="Operation Murloc Freedom" QuestId="41896" Type="KillMob" Nav="Fly" MobId="105366" KillCount="20" />
<Objective QuestName="Operation Murloc Freedom" QuestId="41896" Type="KillMob" Nav="Fly" MobId="105781" KillCount="4" />
<TurnIn Nav="Fly" QuestName="Operation Murloc Freedom" QuestId="41896" TurnInName="" TurnInId="" />

<Vendor Name="Timeworn Raider" Entry="105360" Type="Repair" Nav="Fly" X="912.934" Y="7383.619" Z="29.05897" />
<Vendor Name="Shoalfin Warrior" Entry="114255" Type="Repair" Nav="Fly" X="942.9387" Y="7405.894" Z="20.72879" />
<Vendor Name="Timeworn Greatshell" Entry="110838" Type="Repair" Nav="Fly" X="970.724" Y="7329.705" Z="26.32976" />
<Vendor Name="Shoalfin Slave" Entry="110448" Type="Repair" Nav="Fly" X="1029.131" Y="7310.383" Z="24.96362" />
<Vendor Name="Timeworn Warrior" Entry="110436" Type="Repair" Nav="Fly" X="1110.204" Y="7269.544" Z="22.50263" />
<Vendor Name="Timeworn Riptail" Entry="105361" Type="Repair" Nav="Fly" X="1126.669" Y="7375.219" Z="6.603742" />
<Vendor Name="Timeworn Oracle" Entry="0" Type="Repair" Nav="Fly" X="1094.007" Y="7399.48" Z="2.460377" />
<Vendor Name="Timeworn Stormcaller" Entry="105362" Type="Repair" Nav="Fly" X="1132.804" Y="7473.979" Z="-0.2218951" />

<GameObject Name="Timeworn Jar" Entry="249422" X="1181.54" Y="7340.789" Z="4.020482" />
<GameObject Name="Timeworn Songflower" Entry="252159" X="1212.806" Y="7364.013" Z="2.780885" />
-->
<While Condition="WorldQuestInfo.HasWorldQuest(41896)" >
	<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;Loading Profile [41896] Operation Murloc Freedom - WiN!&quot;);" />
<RunTo 	X="1132.235" Y="7268.747" Z="26.73228" />

	<CustomBehavior File="InteractWith" NumOfTimes="60" MobState="Dead" QuestId="41896" TerminateWhen="IsQuestCompleted(41896)">
		<HuntingGrounds>
<Hotspot X="1095.391" Y="7299.391" Z="16.30162" />
<Hotspot X="1160.363" Y="7357.893" Z="2.312732" />
<Hotspot X="1081.644" Y="7433.15" Z="2.27043" />
<Hotspot X="1003.193" Y="7422.213" Z="0.7878757" />
<Hotspot X="937.1333" Y="7388.294" Z="22.40629" />
		</HuntingGrounds>
		<PursuitList>
			<PursueUnit Id="105365" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
			<PursueUnit Id="105366" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
			<PursueUnit Id="105781" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
			<PursueUnit Id="105360" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
<!--			<PursueUnit Id="114255" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" /> -->
<!--			<PursueUnit Id="110838" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" /> -->
			<PursueUnit Id="110448" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
			<PursueUnit Id="110436" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
			<PursueUnit Id="105361" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
			<PursueUnit Id="105361" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
			<PursueUnit Id="105362" Priority="1" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; (UNIT.IsAlive || UNIT.Lootable)" />
<!--			<PursueGameObject Id="249422" Priority="100" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; GAMEOBJECT.IsValid"/> -->
<!--			<PursueGameObject Id="252159" Priority="100" PursueWhen="!IsObjectiveComplete(1, 41896) &amp;&amp; GAMEOBJECT.IsValid"/> -->
		</PursuitList>
	</CustomBehavior>



<CustomBehavior File="Misc\RunLua" WaitTime="1500" Lua="WorldMapFrame:Show()" />
<CustomBehavior File="Misc\RunLua" Lua="WorldMapFrame:Hide()" />

</While>

<If Condition="HasItem(141605) &amp;&amp; Me.BagItems.FirstOrDefault(h =&gt; h.Entry == 141605).CooldownTimeLeft.TotalMilliseconds == 0" >
    <CustomBehavior    File="UseItem" ItemId="141605" WaitTime="2000" />
</If>

<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;[Auto-Loader]: Finished World Quest Operation Murloc Freedom - WiN!, loading auto-loader!&quot;);" />
<CustomBehavior File="LoadProfile" ProfileName="../autoloader" RememberProfile="true" />
</QuestOrder>
</HBProfile>