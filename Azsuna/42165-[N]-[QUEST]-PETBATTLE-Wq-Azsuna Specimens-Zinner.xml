<HBProfile xsi:noNamespaceSchemaLocation="../Schemas/EchoSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>42165-[N]-[QUEST]-PETBATTLE-Wq-Azsuna Specimens-Zinner.xml</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>false</SellWhite>
	<SellGreen>false</SellGreen>
	<SellBlue>false</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	

	<QuestOrder>
	<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
			
    public static void WQSizeDoesntMatter()
    {
        //SLOT 1 PET
        Lua.DoString("view, total = C_PetJournal.GetNumPets() for wantlevel = 25, 25 do speciesId, petGUID = C_PetJournal.FindPetIDByName(\"Zandalari Kneebiter\") do for i = 1, total do petID, _, owned, _, level, favorite, _, _, _, _, _, _, _, isWild, canBattle, isTradeable, _, _ = C_PetJournal.GetPetInfoByIndex(i) if (level == wantlevel) then C_PetJournal.SetPetLoadOutInfo(1, petGUID) end end end end");
        Thread.Sleep(100);

        //SLOT 2 PET
        Lua.DoString("view, total = C_PetJournal.GetNumPets() for wantlevel = 25, 25 do speciesId, petGUID = C_PetJournal.FindPetIDByName(\"Unborn Val'kyr\") do for i = 1, total do petID, _, owned, _, level, favorite, _, _, _, _, _, _, _, isWild, canBattle, isTradeable, _, _ = C_PetJournal.GetPetInfoByIndex(i) if (level == wantlevel) then C_PetJournal.SetPetLoadOutInfo(2, petGUID) end end end end");
        Thread.Sleep(100);

        //SLOT 3 PET
        Lua.DoString("view, total = C_PetJournal.GetNumPets() for wantlevel = 25, 25 do speciesId, petGUID = C_PetJournal.FindPetIDByName(\"Highlands Turkey\") do for i = 1, total do petID, _, owned, _, level, favorite, _, _, _, _, _, _, _, isWild, canBattle, isTradeable, _, _ = C_PetJournal.GetPetInfoByIndex(i) if (level == wantlevel) then C_PetJournal.SetPetLoadOutInfo(3, petGUID) end end end end");
        Thread.Sleep(100);
    }

    public class WorldQuestData
    {
        public int ID;
        public string Name;
        public DateTime ExpireTime;
    }


    public static class WorldQuestInfo
    {
        static List<WorldQuestData> _cache = new List<WorldQuestData>();
        static internal bool _dirty = true;
        static internal bool _setup = false;

        static WorldQuestInfo()
        {
            Setup();
        }

        public static void Setup()
        {
            if (_setup)
                return;

            Lua.Events.AttachEvent("WORLD_MAP_UPDATE", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("SUPER_TRACKED_QUEST_CHANGED", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("WORLD_QUEST_COMPLETED_BY_SPELL", WorldQuestMarkDirty);

            UpdateWorldQuests();
            _setup = true;
        }

        public static void WorldQuestMarkDirty(object sender, LuaEventArgs args)
        {
            _dirty = true;
        }

        public static bool HasWorldQuest(int questid)
        {
            UpdateWorldQuests();

            var quest = _cache.Where(q => q.ID == questid).FirstOrDefault();

            if (quest == null || quest.ExpireTime <= DateTime.UtcNow)
                return false;
            return true;
        }

        public static void UpdateWorldQuests()
        {
            if (!_dirty)
                return;
            _cache = new List<WorldQuestData>();
            
            var player = StyxWoW.Me;
            int BrokenIslesMapArea = 1007;

            var ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetNumZones({0});", BrokenIslesMapArea));
            
            var NumZones = int.Parse(ret[0]);

            for (int i = 1; i <= NumZones; ++i)
            {
                ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetZoneInfo({0}, {1});", BrokenIslesMapArea, i));

                var ZoneID = int.Parse(ret[0]);
                var ZoneName = ret[1];
                var ZoneDepth = int.Parse(ret[2]);

                if (ZoneDepth > 1) //Do not look at subzones
                {
                    Logging.WriteDiagnostic(string.Format("Ignoring {0} ({1}) as ZoneDepth > 1 ({2})", ZoneID, ZoneName, ZoneDepth));
                    continue;
                }

                string ToRun = string.Format(@"     local questids = {{}};

                    			                    local taskInfo = C_TaskQuest.GetQuestsForPlayerByMapID({0}, {1});

                                                    if taskInfo then
				                                                    for i, info in ipairs(taskInfo) do
					                                                    if HaveQuestData(info.questId) then
						                                                    if QuestUtils_IsQuestWorldQuest(info.questId) then
                                                                                    table.insert(questids, info.questId);
							                                                    end
						                                                    end
					                                                    end
				                                                    end
                                                   return unpack(questids);
                                                ", ZoneID, BrokenIslesMapArea);

                ret = Lua.GetReturnValues(ToRun);

                foreach (var q in ret)
                {
                    int questid = int.Parse(q);

                    //TimeLeft is in minutes
                    var TimeLeft = Lua.GetReturnVal<int>(string.Format("return C_TaskQuest.GetQuestTimeLeftMinutes({0});", questid), 0);
                    var QuestInfo = Lua.GetReturnValues(string.Format("return C_TaskQuest.GetQuestInfoByQuestID({0});", questid));

                    Logging.WriteDiagnostic("WorldQuest {0} ({2}) active ({1}m left)", QuestInfo[0], TimeLeft, questid);

                    var data = new WorldQuestData();
                    data.ID = questid;
                    data.Name = QuestInfo[0];
                    data.ExpireTime = DateTime.UtcNow.AddMinutes(TimeLeft);
                    _cache.Add(data);
                }
            }

            _dirty = false;
        }

        public static bool IsWorldQuest(int questid)
        {
            string lua = string.Format("tagID, tagName, worldQuestType, rarity, isElite, tradeskillLineIndex = GetQuestTagInfo({0});", questid);

            var ret = Lua.GetReturnValues(lua);

            if (ret[3] == null)
                return false;
            return true;
        }
    }


				]]>
			</CustomBehavior>
        <CustomBehavior File="Misc\ProfileCompatibilityInfo" AllowBrokenAddOns="true" AllowBrokenPlugIns="true" />
		<While Condition="WorldQuestInfo.HasWorldQuest(42165)">
                <CustomBehavior File="DisablePlugin" Names="DaezaBattlePets" />
        <CustomBehavior File="RunCode" Code="WQSizeDoesntMatter()"/>
                <MoveTo Nav="Fly" X="-228.438" Y="7733.7" Z="139.189"  />
                <CustomBehavior File="ForcedDismount" />
                <If Condition="SpellManager.CanCast(125439)" >
                    <CustomBehavior File="RunMacro" Macro="/cast Revive Battle Pets"/>
                </If>
		<!-- Felspider -->
<CustomBehavior File="EnablePlugin" Names="DaezaBattlePets" />
                <CustomBehavior File="InteractWith" MobId="97323" TerminateWhen="IsObjectiveComplete(1, 42165)" >
		<HuntingGrounds>
		<Hotspot X="-281.7932" Y="8016.149" Z="95.79836" />
		<Hotspot X="-437.6018" Y="8094.591" Z="68.39647" />
		<Hotspot X="-503.2617" Y="8002.3" Z="67.97755" />
		</HuntingGrounds>
<CustomBehavior File="DisablePlugin" Names="DaezaBattlePets" />
</CustomBehavior>
		<!-- Olivetail Hare -->
<CustomBehavior File="EnablePlugin" Names="DaezaBattlePets" />
                <CustomBehavior File="InteractWith" MobId="97294" TerminateWhen="IsObjectiveComplete(2, 42165)" >
          	<HuntingGrounds >
		<Hotspot X="704.8905" Y="6452.054" Z="102.5557" />
		<Hotspot X="771.1699" Y="6567.536" Z="119.5046" />
		<Hotspot X="722.1384" Y="6541.344" Z="103.4313" />
		</HuntingGrounds>
<CustomBehavior File="DisablePlugin" Names="DaezaBattlePets" />
</CustomBehavior>
		<!-- Juvenile Scuttleback --> 
<CustomBehavior File="EnablePlugin" Names="DaezaBattlePets" />    
		<CustomBehavior File="InteractWith" MobId="97283" TerminateWhen="IsObjectiveComplete(3, 42165)" >
		<HuntingGrounds >
		<Hotspot X="-771.9379" Y="5808.497" Z="4.675108" />
		<Hotspot X="-761.1448" Y="5753.035" Z="3.017448" />
		<Hotspot X="-732.016" Y="5768.604" Z="1.072134" />
		<Hotspot X="-705.8341" Y="5713.754" Z="1.228314" />
		<Hotspot X="-735.7559" Y="5674.467" Z="4.095774" />
		<Hotspot X="-746.0225" Y="5634.792" Z="4.868349" />
		</HuntingGrounds>
<CustomBehavior File="DisablePlugin" Names="DaezaBattlePets" />
</CustomBehavior>
                <CustomBehavior File="WaitTimer" WaitTime="1000" />
                <CustomBehavior File="RunMacro" Macro="/script SelectGossipOption(1)" />
                <CustomBehavior File="RunMacro" Macro="/click StaticPopup1Button1" />
                <CustomBehavior File="WaitTimer" GoalText="Waiting" WaitTime="5000" />
                <CustomBehavior File="EnablePlugin" Names="DaezaBattlePets" />
            


</While>
            <If Condition="IsQuestCompleted(42165)">
                <CustomBehavior File="DisablePlugin" Names="DaezaBattlePets" />
            </If>
<If Condition="HasItem(141605) &amp;&amp; Me.BagItems.FirstOrDefault(h =&gt; h.Entry == 141605).CooldownTimeLeft.TotalMilliseconds == 0" >
    <CustomBehavior    File="UseItem" ItemId="141605" WaitTime="2000" />
</If>
	
<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;[Auto-Loader]: Finished World Quest 42165-[N]-[QUEST]-PETBATTLE-Wq-Azsuna Specimens-Zinner.xml, loading auto-loader!&quot;);" />
<CustomBehavior File="LoadProfile" ProfileName="../autoloader" RememberProfile="true" />

    </QuestOrder>
</HBProfile>