<HBProfile xsi:noNamespaceSchemaLocation="../Schemas/EchoSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>[A-Quest] Ruining the Runewood WorldQuest Zinner</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	

	<QuestOrder>
	<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
			

    public class WorldQuestData
    {
        public int ID;
        public string Name;
        public DateTime ExpireTime;
    }


    public static class WorldQuestInfo
    {
        static List<WorldQuestData> _cache = new List<WorldQuestData>();
        static internal bool _dirty = true;
        static internal bool _setup = false;

        static WorldQuestInfo()
        {
            Setup();
        }

        public static void Setup()
        {
            if (_setup)
                return;

            Lua.Events.AttachEvent("WORLD_MAP_UPDATE", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("SUPER_TRACKED_QUEST_CHANGED", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("WORLD_QUEST_COMPLETED_BY_SPELL", WorldQuestMarkDirty);

            UpdateWorldQuests();
            _setup = true;
        }

        public static void WorldQuestMarkDirty(object sender, LuaEventArgs args)
        {
            _dirty = true;
        }

        public static bool HasWorldQuest(int questid)
        {
            UpdateWorldQuests();

            var quest = _cache.Where(q => q.ID == questid).FirstOrDefault();

            if (quest == null || quest.ExpireTime <= DateTime.UtcNow)
                return false;
            return true;
        }

        public static void UpdateWorldQuests()
        {
            if (!_dirty)
                return;
            _cache = new List<WorldQuestData>();
            
            var player = StyxWoW.Me;
            int BrokenIslesMapArea = 1007;

            var ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetNumZones({0});", BrokenIslesMapArea));
            
            var NumZones = int.Parse(ret[0]);

            for (int i = 1; i <= NumZones; ++i)
            {
                ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetZoneInfo({0}, {1});", BrokenIslesMapArea, i));

                var ZoneID = int.Parse(ret[0]);
                var ZoneName = ret[1];
                var ZoneDepth = int.Parse(ret[2]);

                if (ZoneDepth > 1) //Do not look at subzones
                {
                    Logging.WriteDiagnostic(string.Format("Ignoring {0} ({1}) as ZoneDepth > 1 ({2})", ZoneID, ZoneName, ZoneDepth));
                    continue;
                }

                string ToRun = string.Format(@"     local questids = {{}};

                    			                    local taskInfo = C_TaskQuest.GetQuestsForPlayerByMapID({0}, {1});

                                                    if taskInfo then
				                                                    for i, info in ipairs(taskInfo) do
					                                                    if HaveQuestData(info.questId) then
						                                                    if QuestMapFrame_IsQuestWorldQuest(info.questId) then
                                                                                    table.insert(questids, info.questId);
							                                                    end
						                                                    end
					                                                    end
				                                                    end
                                                   return unpack(questids);
                                                ", ZoneID, BrokenIslesMapArea);

                ret = Lua.GetReturnValues(ToRun);

                foreach (var q in ret)
                {
                    int questid = int.Parse(q);

                    //TimeLeft is in minutes
                    var TimeLeft = Lua.GetReturnVal<int>(string.Format("return C_TaskQuest.GetQuestTimeLeftMinutes({0});", questid), 0);
                    var QuestInfo = Lua.GetReturnValues(string.Format("return C_TaskQuest.GetQuestInfoByQuestID({0});", questid));

                    Logging.WriteDiagnostic("WorldQuest {0} ({2}) active ({1}m left)", QuestInfo[0], TimeLeft, questid);

                    var data = new WorldQuestData();
                    data.ID = questid;
                    data.Name = QuestInfo[0];
                    data.ExpireTime = DateTime.UtcNow.AddMinutes(TimeLeft);
                    _cache.Add(data);
                }
            }

            _dirty = false;
        }

        public static bool IsWorldQuest(int questid)
        {
            string lua = string.Format("tagID, tagName, worldQuestType, rarity, isElite, tradeskillLineIndex = GetQuestTagInfo({0});", questid);

            var ret = Lua.GetReturnValues(lua);

            if (ret[3] == null)
                return false;
            return true;
        }
    }


				]]>
			</CustomBehavior>
	
		
		<While Condition="WorldQuestInfo.HasWorldQuest(41927)" >
				<!-- Get in range of quest to activate -->
				<RunTo X="3421.455" Y="1243.632" Z="123.5195" /> 
				<Objective QuestName="Ruining the Runewood" QuestId="41927" Type="KillMob" Nav="Fly" MobId="98429" KillCount="25" />
				<Objective QuestName="Ruining the Runewood" QuestId="41927" Type="KillMob" Nav="Fly" MobId="98432" KillCount="13" />
				<Objective QuestName="Ruining the Runewood" QuestId="41927" Type="KillMob" Nav="Fly" MobId="98433" KillCount="7" />
				<Objective QuestName="Ruining the Runewood" QuestId="41927" Type="KillMob" Nav="Fly" MobId="98434" KillCount="5" />
				<TurnIn Nav="Fly" QuestName="Ruining the Runewood" QuestId="41927" TurnInName="" TurnInId="" />
</While>
		<While Condition="WorldQuestInfo.HasWorldQuest(41927)" >	
				<RunTo X="3421.455" Y="1243.632" Z="123.5195" />		
			<CustomBehavior File="KillUntilComplete" MobIds="98429, 98432, 98433, 98434 " QuestId="41927">
				<HuntingGrounds>
					<Hotspot X="3421.455" Y="1243.632" Z="123.5195" />
<Hotspot X="3400.456" Y="1208.104" Z="128.0954" />
<Hotspot X="3370.207" Y="1144.588" Z="128.6237" />
<Hotspot X="3452.653" Y="1109.611" Z="142.3517" />
<Hotspot X="3512.323" Y="1064.726" Z="158.5339" />
<Hotspot X="3605.931" Y="1069.582" Z="151.5363" />
<Hotspot X="3390.571" Y="1108.13" Z="130.8638" />
<Hotspot X="3402.351" Y="1199.25" Z="129.5824" />
<Hotspot X="3415.405" Y="1239.01" Z="125.1891" />
<Hotspot X="3381.809" Y="1275.016" Z="126.3092" />
<Hotspot X="3301.545" Y="1226.483" Z="117.5551" />
<Hotspot X="3278.964" Y="1231.157" Z="114.9042" />
<Hotspot X="3226.971" Y="1289.163" Z="120.0265" />
<Hotspot X="3116.499" Y="1245.206" Z="125.0386" />
<Hotspot X="3046.588" Y="1196.377" Z="133.3917" />
<Hotspot X="2944.992" Y="1105.115" Z="131.1632" />
				</HuntingGrounds>
			</CustomBehavior>
		</While>
	
	
	</QuestOrder>
</HBProfile>