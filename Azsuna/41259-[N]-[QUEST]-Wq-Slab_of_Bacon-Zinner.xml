<HBProfile xsi:noNamespaceSchemaLocation="../Schemas/EchoSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>41259 Slab of Bacon-Zinner</Name>

	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>

	<SellGrey>true</SellGrey>
	<SellWhite>false</SellWhite>
	<SellGreen>false</SellGreen>
	<SellBlue>false</SellBlue>
	<SellPurple>false</SellPurple>

	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>

	<TargetElites>true</TargetElites>

	

	<QuestOrder>
	<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
			

    public class WorldQuestData
    {
        public int ID;
        public string Name;
        public DateTime ExpireTime;
    }


    public static class WorldQuestInfo
    {
        static List<WorldQuestData> _cache = new List<WorldQuestData>();
        static internal bool _dirty = true;
        static internal bool _setup = false;

        static WorldQuestInfo()
        {
            Setup();
        }

        public static void Setup()
        {
            if (_setup)
                return;

            Lua.Events.AttachEvent("WORLD_MAP_UPDATE", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("SUPER_TRACKED_QUEST_CHANGED", WorldQuestMarkDirty);
            Lua.Events.AttachEvent("WORLD_QUEST_COMPLETED_BY_SPELL", WorldQuestMarkDirty);

            UpdateWorldQuests();
            _setup = true;
        }

        public static void WorldQuestMarkDirty(object sender, LuaEventArgs args)
        {
            _dirty = true;
        }

        public static bool HasWorldQuest(int questid)
        {
            UpdateWorldQuests();

            var quest = _cache.Where(q => q.ID == questid).FirstOrDefault();

            if (quest == null || quest.ExpireTime <= DateTime.UtcNow)
                return false;
            return true;
        }

        public static void UpdateWorldQuests()
        {
            if (!_dirty)
                return;
            _cache = new List<WorldQuestData>();
            
            var player = StyxWoW.Me;
            int BrokenIslesMapArea = 1007;

            var ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetNumZones({0});", BrokenIslesMapArea));
            
            var NumZones = int.Parse(ret[0]);

            for (int i = 1; i <= NumZones; ++i)
            {
                ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetZoneInfo({0}, {1});", BrokenIslesMapArea, i));

                var ZoneID = int.Parse(ret[0]);
                var ZoneName = ret[1];
                var ZoneDepth = int.Parse(ret[2]);

                if (ZoneDepth > 1) //Do not look at subzones
                {
                    Logging.WriteDiagnostic(string.Format("Ignoring {0} ({1}) as ZoneDepth > 1 ({2})", ZoneID, ZoneName, ZoneDepth));
                    continue;
                }

                string ToRun = string.Format(@"     local questids = {{}};

                    			                    local taskInfo = C_TaskQuest.GetQuestsForPlayerByMapID({0}, {1});

                                                    if taskInfo then
				                                                    for i, info in ipairs(taskInfo) do
					                                                    if HaveQuestData(info.questId) then
						                                                    if QuestUtils_IsQuestWorldQuest(info.questId) then
                                                                                    table.insert(questids, info.questId);
							                                                    end
						                                                    end
					                                                    end
				                                                    end
                                                   return unpack(questids);
                                                ", ZoneID, BrokenIslesMapArea);

                ret = Lua.GetReturnValues(ToRun);

                foreach (var q in ret)
                {
                    int questid = int.Parse(q);

                    //TimeLeft is in minutes
                    var TimeLeft = Lua.GetReturnVal<int>(string.Format("return C_TaskQuest.GetQuestTimeLeftMinutes({0});", questid), 0);
                    var QuestInfo = Lua.GetReturnValues(string.Format("return C_TaskQuest.GetQuestInfoByQuestID({0});", questid));

                    Logging.WriteDiagnostic("WorldQuest {0} ({2}) active ({1}m left)", QuestInfo[0], TimeLeft, questid);

                    var data = new WorldQuestData();
                    data.ID = questid;
                    data.Name = QuestInfo[0];
                    data.ExpireTime = DateTime.UtcNow.AddMinutes(TimeLeft);
                    _cache.Add(data);
                }
            }

            _dirty = false;
        }

        public static bool IsWorldQuest(int questid)
        {
            string lua = string.Format("tagID, tagName, worldQuestType, rarity, isElite, tradeskillLineIndex = GetQuestTagInfo({0});", questid);

            var ret = Lua.GetReturnValues(lua);

            if (ret[3] == null)
                return false;
            return true;
        }
    }


				]]>
			</CustomBehavior>
	
		
		<While Condition="WorldQuestInfo.HasWorldQuest(41259)" >
				<!-- Get in range of quest to activate -->
				<RunTo X="690.5283" Y="7839.773" Z="61.03362" /> 
				<PickUp Nav="Fly" QuestName="Slab of Bacon" QuestId="41259" GiverName="" GiverId="0" />

				<Objective QuestName="Slab of Bacon" QuestId="41259" Type="CollectItem" Nav="Fly" ItemId="135511" CollectCount="1" />

				<TurnIn Nav="Fly" QuestName="Slab of Bacon" QuestId="41259" TurnInName="" TurnInId="0" />



</While>

<!--
QuestName="Slab of Bacon" QuestId="41552" Type="CollectItem" Nav="Fly" ItemId="135511" CollectCount="1" />
<TurnIn Nav="Fly" QuestName="Slab of Bacon" QuestId="41552" TurnInName="" TurnInId="0" />

Position: -1316.42, 5561.57, 0.81
Name: Well-Fed Lion Seal
Entry(ID): 103784
Faction ID: 7
Faction Name: Creature
<Vendor Name="Well-Fed Lion Seal" Entry="103784" Type="Repair" Nav="Fly" X="-1334.747" Y="5545.39" Z="2.387383" />

WiN
<PickUp Nav="Fly" QuestName="Slab of Bacon" QuestId="41259" GiverName="" GiverId="" />
<Objective QuestName="Slab of Bacon" QuestId="41259" Type="CollectItem" Nav="Fly" ItemId="135511" CollectCount="1" />
<TurnIn Nav="Fly" QuestName="Slab of Bacon" QuestId="41259" TurnInName="" TurnInId="" />

<WoWUnit Name="Well-Fed Lion Seal" Entry="103784" X="671.7977" Y="7801.383" Z="-0.9699816" />
-->
		<While Condition="WorldQuestInfo.HasWorldQuest(41259)" >	
				<RunTo X="726.0623" Y="7812.946" Z="0.8879584" />		
			<CustomBehavior File="KillUntilComplete" MobIds="103784" QuestId="41259">
				<HuntingGrounds>
					<Hotspot X="690.5283" Y="7839.773" Z="61.03362" />
					<Hotspot X="632.4174" Y="7793.778" Z="22.41886" />
					<Hotspot X="706.1418" Y="7723.176" Z="4.878461" />
					<Hotspot X="744.3328" Y="7797.317" Z="28.16195" />
					<Hotspot X="684.2007" Y="7831.487" Z="56.10507" />
					<Hotspot X="671.7977" Y="7801.383" Z="-0.9699816" />
				</HuntingGrounds>
			</CustomBehavior>
<CustomBehavior File="Misc\RunLua" WaitTime="1500" Lua="WorldMapFrame:Show()" />
<CustomBehavior File="Misc\RunLua" Lua="WorldMapFrame:Hide()" />
</While>
<If Condition="HasItem(141605) &amp;&amp; Me.BagItems.FirstOrDefault(h =&gt; h.Entry == 141605).CooldownTimeLeft.TotalMilliseconds == 0" >
    <CustomBehavior    File="UseItem" ItemId="141605" WaitTime="2000" />
</If>
	
<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;[Auto-Loader]: Finished World Quest [N]-[QUEST]-Wq-Reclaiming_Llothien-Zinner, loading auto-loader!&quot;);" />
<CustomBehavior File="LoadProfile" ProfileName="../autoloader" RememberProfile="true" />
</QuestOrder>
</HBProfile>