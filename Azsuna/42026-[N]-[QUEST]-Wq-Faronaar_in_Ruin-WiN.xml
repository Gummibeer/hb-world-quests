<HBProfile xsi:noNamespaceSchemaLocation="../Schemas/EchoSchema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!-- Original contribution by EchoTiger -->
	<Name>[42026] Faronaar in Ruin - Win</Name>
	<AvoidMobs>
	<Mob Name="Lord Perdition" Entry="90663" />
</AvoidMobs>
	<MinDurability>0.3</MinDurability>
	<MinFreeBagSlots>3</MinFreeBagSlots>
	<SellGrey>true</SellGrey>
	<SellWhite>true</SellWhite>
	<SellGreen>true</SellGreen>
	<SellBlue>true</SellBlue>
	<SellPurple>false</SellPurple>
	<MailGrey>false</MailGrey>
	<MailWhite>true</MailWhite>
	<MailGreen>true</MailGreen>
	<MailBlue>true</MailBlue>
	<MailPurple>true</MailPurple>
	<TargetElites>false</TargetElites>
	<QuestOrder>
		<CustomBehavior File="RunCode" Type="Definition"><![CDATA[
			public class WorldQuestData
			{
			public int ID;
			public string Name;
			public DateTime ExpireTime;
			}
			public static class WorldQuestInfo
			{
			static List<WorldQuestData> _cache = new List<WorldQuestData>();
				static internal bool _dirty = true;
				static internal bool _setup = false;
				static WorldQuestInfo()
				{
				Setup();
				}
				public static void Setup()
				{
				if (_setup)
				return;
				Lua.Events.AttachEvent("WORLD_MAP_UPDATE", WorldQuestMarkDirty);
				Lua.Events.AttachEvent("SUPER_TRACKED_QUEST_CHANGED", WorldQuestMarkDirty);
				Lua.Events.AttachEvent("WORLD_QUEST_COMPLETED_BY_SPELL", WorldQuestMarkDirty);
				UpdateWorldQuests();
				_setup = true;
				}
				public static void WorldQuestMarkDirty(object sender, LuaEventArgs args)
				{
				_dirty = true;
				}
				public static bool HasWorldQuest(int questid)
				{
				UpdateWorldQuests();
				var quest = _cache.Where(q => q.ID == questid).FirstOrDefault();
				if (quest == null || quest.ExpireTime <= DateTime.UtcNow)
					return false;
					return true;
					}
					public static void UpdateWorldQuests()
					{
					if (!_dirty)
					return;
					_cache = new List<WorldQuestData>();
						var player = StyxWoW.Me;
						int BrokenIslesMapArea = 1007;
						var ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetNumZones({0});", BrokenIslesMapArea));
						var NumZones = int.Parse(ret[0]);
						for (int i = 1; i <= NumZones; ++i)
							{
							ret = Lua.GetReturnValues(string.Format("return C_MapCanvas.GetZoneInfo({0}, {1});", BrokenIslesMapArea, i));
							var ZoneID = int.Parse(ret[0]);
							var ZoneName = ret[1];
							var ZoneDepth = int.Parse(ret[2]);
							if (ZoneDepth > 1) //Do not look at subzones
							{
							Logging.WriteDiagnostic(string.Format("Ignoring {0} ({1}) as ZoneDepth > 1 ({2})", ZoneID, ZoneName, ZoneDepth));
							continue;
							}
							string ToRun = string.Format(@"     local questids = {{}};
							local taskInfo = C_TaskQuest.GetQuestsForPlayerByMapID({0}, {1});
							if taskInfo then
							for i, info in ipairs(taskInfo) do
							if HaveQuestData(info.questId) then
							if QuestMapFrame_IsQuestWorldQuest(info.questId) then
							table.insert(questids, info.questId);
							end
							end
							end
							end
							return unpack(questids);
							", ZoneID, BrokenIslesMapArea);
							ret = Lua.GetReturnValues(ToRun);
							foreach (var q in ret)
							{
							int questid = int.Parse(q);
							//TimeLeft is in minutes
							var TimeLeft = Lua.GetReturnVal<int>(string.Format("return C_TaskQuest.GetQuestTimeLeftMinutes({0});", questid), 0);
								var QuestInfo = Lua.GetReturnValues(string.Format("return C_TaskQuest.GetQuestInfoByQuestID({0});", questid));
								Logging.WriteDiagnostic("WorldQuest {0} ({2}) active ({1}m left)", QuestInfo[0], TimeLeft, questid);
								var data = new WorldQuestData();
								data.ID = questid;
								data.Name = QuestInfo[0];
								data.ExpireTime = DateTime.UtcNow.AddMinutes(TimeLeft);
								_cache.Add(data);
								}
								}
								_dirty = false;
								}
								public static bool IsWorldQuest(int questid)
								{
								string lua = string.Format("tagID, tagName, worldQuestType, rarity, isElite, tradeskillLineIndex = GetQuestTagInfo({0});", questid);
								var ret = Lua.GetReturnValues(lua);
								if (ret[3] == null)
								return false;
								return true;
								}
								}
								]]>
							</CustomBehavior>


<!--
<PickUp Nav="Fly" QuestName="Faronaar in Ruin" QuestId="42026" GiverName="" GiverId="" />
<Objective QuestName="Faronaar in Ruin" QuestId="42026" Type="UseObject" Nav="Fly" ObjectId="249416" UseCount="8" />
<Objective QuestName="Faronaar in Ruin" QuestId="42026" Type="KillMob" Nav="Fly" MobId="97832" KillCount="10" />
<Objective QuestName="Faronaar in Ruin" QuestId="42026" Type="KillMob" Nav="Fly" MobId="106007" KillCount="8" />
<TurnIn Nav="Fly" QuestName="Faronaar in Ruin" QuestId="42026" TurnInName="" TurnInId="" />

<WoWUnit Name="Captured Illidari" Entry="106007" X="-649.783" Y="7308.586" Z="27.05662" /> 1
<GameObject Name="Jailer's Cage" Entry="249416" X="-649.5677" Y="7308.558" Z="27.13751" /> 1

<WoWUnit Name="Soultorn Jailer" Entry="103363" X="-589.0313" Y="7271.635" Z="28.01537" /> 2
<WoWUnit Name="Legion Skyterror" Entry="90659" X="-575.2535" Y="7256.07" Z="30.91292" /> 2
<WoWUnit Name="Eredar Supplicant" Entry="103162" X="-566.8333" Y="7227.314" Z="31.49878" /> 2
<WoWUnit Name="Grim Inquisitor" Entry="103231" X="-611.3054" Y="7277.645" Z="28.10257" />
-->

<While Condition="WorldQuestInfo.HasWorldQuest(42026)" >
	<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;Loading Profile [42026] Faronaar in Ruin - WiN!&quot;);" />
<RunTo X="-614.1506" Y="7275.886" Z="27.65965" />

	<CustomBehavior File="InteractWith" NumOfTimes="20" MobState="Dead"  TerminateWhen="IsQuestCompleted(42026)">
		<HuntingGrounds>
<Hotspot X="-614.1506" Y="7275.886" Z="27.65965" />
<Hotspot X="-712.4473" Y="7220.84" Z="32.35116" />
<Hotspot X="-775.9566" Y="7144.25" Z="27.47298" />
<Hotspot X="-832.6381" Y="7169.594" Z="20.19445" />
<Hotspot X="-833.0221" Y="7248.004" Z="33.60348" />
		</HuntingGrounds>
		<PursuitList>
			<PursueUnit Id="249416" Priority="1" PursueWhen="!IsObjectiveComplete(1, 42026)" />
			<PursueGameObject Id="249416" Priority="100" PursueWhen="!IsObjectiveComplete(1, 42026)" />
		  <PursueUnit Id="103363" Priority="1" PursueWhen="!IsObjectiveComplete(2, 42026) &amp;&amp; (UNIT.IsAlive)" />
			<PursueUnit Id="90659" Priority="1" PursueWhen="!IsObjectiveComplete(2, 42026) &amp;&amp; (UNIT.IsAlive)" />
			<PursueUnit Id="103162" Priority="1" PursueWhen="!IsObjectiveComplete(2, 42026) &amp;&amp; (UNIT.IsAlive)" />
			<PursueUnit Id="103231" Priority="1" PursueWhen="!IsObjectiveComplete(2, 42026) &amp;&amp; (UNIT.IsAlive)" />

		</PursuitList>
	</CustomBehavior>

<CustomBehavior File="Misc\RunLua" WaitTime="1500" Lua="WorldMapFrame:Show()" />
<CustomBehavior File="Misc\RunLua" Lua="WorldMapFrame:Hide()" />

</While>

<If Condition="HasItem(141605) &amp;&amp; Me.BagItems.FirstOrDefault(h =&gt; h.Entry == 141605).CooldownTimeLeft.TotalMilliseconds == 0" >
    <CustomBehavior    File="UseItem" ItemId="141605" WaitTime="2000" />
</If>

<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;[Auto-Loader]: Finished World Quest [42026] Faronaar in Ruin - WiN!, loading auto-loader!&quot;);" />
<CustomBehavior File="LoadProfile" ProfileName="../autoloader" RememberProfile="true" />
</QuestOrder>
</HBProfile>